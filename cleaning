
/*
In the accounts table, there is a column holding the website for each company. The last three digits specify what type of web address they are using. A list of extensions (and pricing) is provided here. Pull these extensions and provide how many of each website type exist in the accounts table.


There is much debate about how much the name (or even the first letter of a company name) matters. Use the accounts table to pull the first letter of each company name to see the distribution of company names that begin with each letter (or number).
*/

select website, right(website,4), name, left(name,1) from accounts
order by name
/*
Use the accounts table to create first and last name columns that hold the first and last names for the primary_poc.
*/

select primary_poc,
left(primary_poc, strpos(primary_poc,' ')-1) as First_Name,
right(primary_poc, length(primary_poc) - position(' ' in primary_poc)) as Last_Name
from accounts


/*
Now see if you can do the same thing for every rep name in the sales_reps table. Again provide first and last name columns.
*/
select name,
left(name, strpos(name,' ')-1) as First_Name,
right(name, length(name) - position(' ' in name)) as Last_Name
from sales_reps

/*
Each company in the accounts table wants to create an email address for each primary_poc. The email address should be the first name of the primary_poc . last name primary_poc @ company name .com.
*/


select concat(
  left(primary_poc, position(' ' in primary_poc)-1),
  '@',              
  replace(name,' ',''),
  '.com')
from accounts

/*
We would also like to create an initial password, which they will change after their first log in. The first password will be the first letter of the primary_poc's first name (lowercase), then the last letter of their first name (lowercase), the first letter of their last name (lowercase), the last letter of their last name (lowercase), the number of letters in their first name, the number of letters in their last name, and then the name of the company they are working with, all capitalized with no spaces.
*/
with subquery as (select 
  left(primary_poc, position(' ' in primary_poc)-1) first_name,
 right(primary_poc, length(primary_poc) - position(' ' in primary_poc)) as last_name,
  replace(name,' ','') company_name
from accounts)
select concat(first_name, '@', company_name, '.com') as email,
concat(lower(left(first_name,1)),
       lower(right(first_name,1)),
       lower(left(last_name,1)),
       lower(right(last_name,1)),
       length(first_name),
       length(last_name),
       upper(company_name)) as psw
from subquery


/*
Using cast and concat to fix date data into the correct data type for sql
*/

with sub as (select left(date,10) date
from sf_crime_data
limit 10),
sub2 as (select right(date,length(date)-position('/' in date)) dates,
date
from sub),
sub3 as (select left(date,2) as month,
left(dates,2) as day,
right(date,4) as year
from sub2)

select cast (concat(year, '-', month, '-', day) as date)
from sub3


/*
COALESCE
*/
SELECT COALESCE(a.id, a.id) filled_id, 
a.name, 
a.website, 
a.lat, 
a.long, 
a.primary_poc, 
a.sales_rep_id, 
COALESCE(o.account_id, a.id) account_id, o.occurred_at, 
COALESCE(o.standard_qty, 0) standard_qty,
COALESCE(o.gloss_qty,0) gloss_qty, 
COALESCE(o.poster_qty,0) poster_qty, COALESCE(o.total,0) total, COALESCE(o.standard_amt_usd,0) standard_amt_usd, COALESCE(o.gloss_amt_usd,0) gloss_amt_usd, COALESCE(o.poster_amt_usd,0) poster_amt_usd, COALESCE(o.total_amt_usd,0) total_amt_usd
FROM accounts a
LEFT JOIN orders o
ON a.id = o.account_id;
